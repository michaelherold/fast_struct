# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `builder` gem.
# Please instead update this file by running `bin/tapioca gem builder`.

# source://builder//lib/builder/blankslate.rb#17
module Builder
  class << self
    # source://builder//lib/builder/xchar.rb#13
    def check_for_name_collision(klass, method_name, defined_constant = T.unsafe(nil)); end
  end
end

# source://builder//lib/builder/blankslate.rb#19
Builder::BlankSlate = BasicObject

# source://builder//lib/builder/xmlbase.rb#9
class Builder::IllegalBlockError < ::RuntimeError; end

# source://builder//lib/builder/xchar.rb#33
module Builder::XChar
  class << self
    # source://builder//lib/builder/xchar.rb#152
    def encode(string); end

    # source://builder//lib/builder/xchar.rb#126
    def unicode(string); end
  end
end

# source://builder//lib/builder/xchar.rb#38
Builder::XChar::CP1252 = T.let(T.unsafe(nil), Hash)

# source://builder//lib/builder/xchar.rb#100
Builder::XChar::CP1252_DIFFERENCES = T.let(T.unsafe(nil), String)

# source://builder//lib/builder/xchar.rb#120
Builder::XChar::ENCODING_BINARY = T.let(T.unsafe(nil), Encoding)

# source://builder//lib/builder/xchar.rb#122
Builder::XChar::ENCODING_ISO1 = T.let(T.unsafe(nil), Encoding)

# source://builder//lib/builder/xchar.rb#121
Builder::XChar::ENCODING_UTF8 = T.let(T.unsafe(nil), Encoding)

# source://builder//lib/builder/xchar.rb#109
Builder::XChar::INVALID_XML_CHAR = T.let(T.unsafe(nil), Regexp)

# source://builder//lib/builder/xchar.rb#69
Builder::XChar::PREDEFINED = T.let(T.unsafe(nil), Hash)

# source://builder//lib/builder/xchar.rb#84
Builder::XChar::REPLACEMENT_CHAR = T.let(T.unsafe(nil), String)

# source://builder//lib/builder/xchar.rb#100
Builder::XChar::UNICODE_EQUIVALENT = T.let(T.unsafe(nil), String)

# source://builder//lib/builder/xchar.rb#76
Builder::XChar::VALID = T.let(T.unsafe(nil), Array)

# source://builder//lib/builder/xchar.rb#105
Builder::XChar::XML_PREDEFINED = T.let(T.unsafe(nil), Regexp)

# source://builder//lib/builder/xmlbase.rb#13
class Builder::XmlBase < ::BasicObject
  # source://builder//lib/builder/xmlbase.rb#29
  def initialize(indent = T.unsafe(nil), initial = T.unsafe(nil), encoding = T.unsafe(nil)); end

  # source://builder//lib/builder/xmlbase.rb#118
  def <<(text); end

  # source://builder//lib/builder/xmlbase.rb#35
  def explicit_nil_handling?; end

  # source://builder//lib/builder/xmlbase.rb#92
  def method_missing(sym, *args, &block); end

  # source://builder//lib/builder/xmlbase.rb#128
  def nil?; end

  # source://builder//lib/builder/xmlbase.rb#42
  def tag!(sym, *args, &block); end

  # source://builder//lib/builder/xmlbase.rb#101
  def text!(text); end

  private

  # source://builder//lib/builder/xmlbase.rb#136
  def _escape(text); end

  # source://builder//lib/builder/xmlbase.rb#159
  def _escape_attribute(text); end

  # source://builder//lib/builder/xmlbase.rb#169
  def _indent; end

  # source://builder//lib/builder/xmlbase.rb#174
  def _nested_structures(block); end

  # source://builder//lib/builder/xmlbase.rb#164
  def _newline; end

  # source://builder//lib/builder/xmlbase.rb#187
  def cache_method_call(sym); end

  class << self
    # source://builder//lib/builder/xmlbase.rb#16
    def cache_method_calls; end

    # source://builder//lib/builder/xmlbase.rb#16
    def cache_method_calls=(_arg0); end
  end
end

# source://builder//lib/builder/xmlevents.rb#49
class Builder::XmlEvents < ::Builder::XmlMarkup
  # source://builder//lib/builder/xmlevents.rb#59
  def _end_tag(sym); end

  # source://builder//lib/builder/xmlevents.rb#54
  def _start_tag(sym, attrs, end_too = T.unsafe(nil)); end

  # source://builder//lib/builder/xmlevents.rb#50
  def text!(text); end
end

# source://builder//lib/builder/xmlmarkup.rb#161
class Builder::XmlMarkup < ::Builder::XmlBase
  # source://builder//lib/builder/xmlmarkup.rb#190
  def initialize(options = T.unsafe(nil)); end

  # source://builder//lib/builder/xmlmarkup.rb#270
  def cdata!(text); end

  # source://builder//lib/builder/xmlmarkup.rb#275
  def cdata_value!(open, text); end

  # source://builder//lib/builder/xmlmarkup.rb#204
  def comment!(comment_text); end

  # source://builder//lib/builder/xmlmarkup.rb#215
  def declare!(inst, *args, &block); end

  # source://builder//lib/builder/xmlmarkup.rb#248
  def instruct!(directive_tag = T.unsafe(nil), attrs = T.unsafe(nil)); end

  # source://builder//lib/builder/xmlmarkup.rb#200
  def target!; end

  private

  # source://builder//lib/builder/xmlmarkup.rb#326
  def _attr_value(value); end

  # source://builder//lib/builder/xmlmarkup.rb#310
  def _end_tag(sym); end

  # source://builder//lib/builder/xmlmarkup.rb#335
  def _ensure_no_block(got_block); end

  # source://builder//lib/builder/xmlmarkup.rb#315
  def _insert_attributes(attrs, order = T.unsafe(nil)); end

  # source://builder//lib/builder/xmlmarkup.rb#291
  def _special(open, close, data = T.unsafe(nil), attrs = T.unsafe(nil), order = T.unsafe(nil)); end

  # source://builder//lib/builder/xmlmarkup.rb#302
  def _start_tag(sym, attrs, end_too = T.unsafe(nil)); end

  # source://builder//lib/builder/xmlmarkup.rb#286
  def _text(text); end
end
