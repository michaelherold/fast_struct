# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `minitest-reporters` gem.
# Please instead update this file by running `bin/tapioca gem minitest-reporters`.

# source://minitest-reporters//lib/minitest/reporters.rb#3
module Minitest
  class << self
    # source://minitest/5.20.0/lib/minitest.rb#176
    def __run(reporter, options); end

    # source://minitest/5.20.0/lib/minitest.rb#97
    def after_run(&block); end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def allow_fork; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def allow_fork=(_arg0); end

    # source://minitest/5.20.0/lib/minitest.rb#69
    def autorun; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def backtrace_filter; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def backtrace_filter=(_arg0); end

    # source://minitest/5.20.0/lib/minitest.rb#18
    def cattr_accessor(name); end

    # source://minitest/5.20.0/lib/minitest.rb#1102
    def clock_time; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def extensions; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def extensions=(_arg0); end

    # source://minitest/5.20.0/lib/minitest.rb#267
    def filter_backtrace(bt); end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def info_signal; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def info_signal=(_arg0); end

    # source://minitest/5.20.0/lib/minitest.rb#101
    def init_plugins(options); end

    # source://minitest/5.20.0/lib/minitest.rb#108
    def load_plugins; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def parallel_executor; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def parallel_executor=(_arg0); end

    # source://minitest/5.20.0/lib/minitest.rb#189
    def process_args(args = T.unsafe(nil)); end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def reporter; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def reporter=(_arg0); end

    # source://minitest/5.20.0/lib/minitest.rb#143
    def run(args = T.unsafe(nil)); end

    # source://minitest/5.20.0/lib/minitest.rb#1093
    def run_one_method(klass, method_name); end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def seed; end

    # source://minitest/5.20.0/lib/minitest.rb#19
    def seed=(_arg0); end
  end
end

# source://minitest-reporters//lib/minitest/extensible_backtrace_filter.rb#3
class Minitest::ExtensibleBacktraceFilter
  # source://minitest-reporters//lib/minitest/extensible_backtrace_filter.rb#21
  def initialize; end

  # source://minitest-reporters//lib/minitest/extensible_backtrace_filter.rb#28
  def add_filter(regex); end

  # source://minitest-reporters//lib/minitest/extensible_backtrace_filter.rb#52
  def filter(backtrace); end

  # source://minitest-reporters//lib/minitest/extensible_backtrace_filter.rb#36
  def filters?(str); end

  class << self
    # source://minitest-reporters//lib/minitest/extensible_backtrace_filter.rb#10
    def default_filter; end
  end
end

# source://minitest-reporters//lib/minitest/relative_position.rb#2
module Minitest::RelativePosition
  private

  # source://minitest-reporters//lib/minitest/relative_position.rb#14
  def pad(str, size = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/relative_position.rb#18
  def pad_mark(str); end

  # source://minitest-reporters//lib/minitest/relative_position.rb#22
  def pad_test(str); end

  # source://minitest-reporters//lib/minitest/relative_position.rb#10
  def print_with_info_padding(line); end
end

# source://minitest-reporters//lib/minitest/relative_position.rb#6
Minitest::RelativePosition::INFO_PADDING = T.let(T.unsafe(nil), Integer)

# source://minitest-reporters//lib/minitest/relative_position.rb#5
Minitest::RelativePosition::MARK_SIZE = T.let(T.unsafe(nil), Integer)

# source://minitest-reporters//lib/minitest/relative_position.rb#3
Minitest::RelativePosition::TEST_PADDING = T.let(T.unsafe(nil), Integer)

# source://minitest-reporters//lib/minitest/relative_position.rb#4
Minitest::RelativePosition::TEST_SIZE = T.let(T.unsafe(nil), Integer)

# source://minitest-reporters//lib/minitest/reporters.rb#7
module Minitest::Reporters
  class << self
    # source://minitest-reporters//lib/minitest/reporters.rb#61
    def choose_reporters(console_reporters, env); end

    # source://minitest-reporters//lib/minitest/reporters.rb#73
    def clock_time; end

    # source://minitest-reporters//lib/minitest/reporters.rb#81
    def minitest_version; end

    # source://minitest-reporters//lib/minitest/reporters.rb#22
    def reporters; end

    # source://minitest-reporters//lib/minitest/reporters.rb#22
    def reporters=(_arg0); end

    # source://minitest-reporters//lib/minitest/reporters.rb#25
    def use!(console_reporters = T.unsafe(nil), env = T.unsafe(nil), backtrace_filter = T.unsafe(nil)); end

    # source://minitest-reporters//lib/minitest/reporters.rb#43
    def use_around_test_hooks!; end

    # source://minitest-reporters//lib/minitest/reporters.rb#85
    def use_old_activesupport_fix!; end

    # source://minitest-reporters//lib/minitest/reporters.rb#39
    def use_runner!(console_reporters, env); end
  end
end

# source://minitest-reporters//lib/minitest/reporters/ansi.rb#3
module Minitest::Reporters::ANSI; end

# source://minitest-reporters//lib/minitest/reporters/ansi.rb#4
module Minitest::Reporters::ANSI::Code
  include ::ANSI::Constants
  include ::ANSI::Code
  extend ::ANSI::Constants
  extend ::ANSI::Code

  class << self
    # source://minitest-reporters//lib/minitest/reporters/ansi.rb#5
    def color?; end
  end
end

# source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#25
class Minitest::Reporters::BaseReporter < ::Minitest::StatisticsReporter
  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#28
  def initialize(options = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#33
  def add_defaults(defaults); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#55
  def after_test(_test); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#38
  def before_test(test); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#49
  def record(test); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#57
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#26
  def tests; end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#26
  def tests=(_arg0); end

  protected

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#66
  def after_suite(test); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#68
  def before_suite(test); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#111
  def filter_backtrace(backtrace); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#119
  def print(*args); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#93
  def print_colored_status(test); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#123
  def print_info(e, name = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#115
  def puts(*args); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#70
  def result(test); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#82
  def test_class(result); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#107
  def total_count; end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#103
  def total_time; end
end

# source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#10
class Minitest::Reporters::DefaultReporter < ::Minitest::Reporters::BaseReporter
  include ::ANSI::Constants
  include ::ANSI::Code
  include ::Minitest::Reporters::ANSI::Code
  include ::Minitest::RelativePosition

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#14
  def initialize(options = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#47
  def after_suite(suite); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#42
  def before_suite(suite); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#37
  def before_test(test); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#59
  def on_record(test); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#94
  def on_report; end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#31
  def on_start; end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#140
  def print_failure(test); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#53
  def record(test); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#85
  def record_failure(record); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#77
  def record_pass(record); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#81
  def record_skip(record); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#89
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#26
  def start; end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#89
  def to_s; end

  private

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#167
  def color?; end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#189
  def colored_for(result, string); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#159
  def get_source_location(result); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#177
  def green(string); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#206
  def location(exception); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#216
  def message_for(test); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#185
  def red(string); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#155
  def relative_path(path); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#230
  def result_line; end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#235
  def suite_duration(suite); end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#197
  def suite_result; end

  # source://minitest-reporters//lib/minitest/reporters/default_reporter.rb#181
  def yellow(string); end
end

# source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#20
class Minitest::Reporters::HtmlReporter < ::Minitest::Reporters::BaseReporter
  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#60
  def initialize(args = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#48
  def friendly_name(test); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#25
  def passes; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#43
  def percent_errors_failures; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#30
  def percent_passes; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#35
  def percent_skipps; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#35
  def percent_skips; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#91
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#82
  def start; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#22
  def title; end

  private

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#142
  def compare_suites(suite_a, suite_b); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#131
  def compare_suites_by_name(suite_a, suite_b); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#157
  def compare_tests(test_a, test_b); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#135
  def compare_tests_by_name(test_a, test_b); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#127
  def html_file; end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#207
  def location(exception); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#190
  def message_for(test); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#175
  def summarize_suite(suite, tests); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#170
  def test_fail_or_error?(test); end

  # source://minitest-reporters//lib/minitest/reporters/html_reporter.rb#216
  def total_time_to_hms; end
end

# source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#16
class Minitest::Reporters::JUnitReporter < ::Minitest::Reporters::BaseReporter
  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#21
  def initialize(reports_dir = T.unsafe(nil), empty = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#64
  def get_relative_path(result); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#35
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#19
  def reports_path; end

  private

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#168
  def analyze_suite(tests); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#181
  def filename_for(suite); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#77
  def get_source_location(result); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#158
  def location(exception); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#142
  def message_for(test); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#85
  def parse_xml_for(xml, suite, tests); end

  # source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#119
  def xml_message_for(test); end
end

# source://minitest-reporters//lib/minitest/reporters/junit_reporter.rb#17
Minitest::Reporters::JUnitReporter::DEFAULT_REPORTS_DIR = T.let(T.unsafe(nil), String)

# source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#24
class Minitest::Reporters::MeanTimeReporter < ::Minitest::Reporters::DefaultReporter
  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#54
  def initialize(options = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#65
  def after_suite(suite); end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#90
  def on_record(test); end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#94
  def on_report; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#86
  def on_start; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#76
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#102
  def reset_statistics!; end

  protected

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#108
  def all_suite_times; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#108
  def all_suite_times=(_arg0); end

  private

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#346
  def asc?; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#301
  def avg_label; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#172
  def column_sorted_body; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#286
  def create_new_report!; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#248
  def create_or_update_previous_runs!; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#113
  def current_run; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#120
  def defaults; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#306
  def des_label; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#351
  def desc?; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#311
  def max_label; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#316
  def min_label; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#189
  def options; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#358
  def order; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#160
  def order_sorted_body; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#200
  def previous_run; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#208
  def previous_runs_filename; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#215
  def previously_ran?; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#335
  def rate(run, min, max); end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#146
  def report_body; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#224
  def report_filename; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#135
  def report_title; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#322
  def run_label(rating); end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#238
  def samples; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#195
  def show_count; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#374
  def sort_column; end

  # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#295
  def write_to_screen!; end

  class << self
    # source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#33
    def reset_statistics!; end
  end
end

# source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#25
class Minitest::Reporters::MeanTimeReporter::InvalidOrder < ::StandardError; end

# source://minitest-reporters//lib/minitest/reporters/mean_time_reporter.rb#26
class Minitest::Reporters::MeanTimeReporter::InvalidSortColumn < ::StandardError; end

# source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#12
class Minitest::Reporters::ProgressReporter < ::Minitest::Reporters::BaseReporter
  include ::Minitest::RelativePosition
  include ::ANSI::Constants
  include ::ANSI::Code
  include ::Minitest::Reporters::ANSI::Code

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#18
  def initialize(options = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#41
  def before_test(test); end

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#49
  def record(test); end

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#70
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#32
  def start; end

  private

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#93
  def color; end

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#97
  def color=(color); end

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#89
  def print_test_with_time(test); end

  # source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#85
  def show; end
end

# source://minitest-reporters//lib/minitest/reporters/progress_reporter.rb#16
Minitest::Reporters::ProgressReporter::PROGRESS_MARK = T.let(T.unsafe(nil), String)

# source://minitest-reporters//lib/minitest/reporters/ruby_mate_reporter.rb#4
class Minitest::Reporters::RubyMateReporter < ::Minitest::Reporters::BaseReporter
  include ::Minitest::RelativePosition

  # source://minitest-reporters//lib/minitest/reporters/ruby_mate_reporter.rb#15
  def record(test); end

  # source://minitest-reporters//lib/minitest/reporters/ruby_mate_reporter.rb#37
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/ruby_mate_reporter.rb#9
  def start; end

  private

  # source://minitest-reporters//lib/minitest/reporters/ruby_mate_reporter.rb#49
  def print_test_with_time(test); end
end

# source://minitest-reporters//lib/minitest/reporters/ruby_mate_reporter.rb#7
Minitest::Reporters::RubyMateReporter::INFO_PADDING = T.let(T.unsafe(nil), Integer)

# source://minitest-reporters//lib/minitest/reporters/rubymine_reporter.rb#15
class Minitest::Reporters::RubyMineReporter < ::Minitest::Reporters::DefaultReporter
  # source://minitest-reporters//lib/minitest/reporters/rubymine_reporter.rb#16
  def initialize(options = T.unsafe(nil)); end
end

# source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#9
class Minitest::Reporters::SpecReporter < ::Minitest::Reporters::BaseReporter
  include ::ANSI::Constants
  include ::ANSI::Code
  include ::Minitest::Reporters::ANSI::Code
  include ::Minitest::RelativePosition

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#18
  def initialize(options = T.unsafe(nil)); end

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#50
  def record(test); end

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#29
  def report; end

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#23
  def start; end

  protected

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#62
  def after_suite(_suite); end

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#58
  def before_suite(suite); end

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#66
  def print_failure(name, tests); end

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#76
  def record_print_failures_if_any(test); end

  # source://minitest-reporters//lib/minitest/reporters/spec_reporter.rb#83
  def record_print_status(test); end
end

# source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#3
class Minitest::Reporters::Suite
  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#5
  def initialize(name); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#9
  def ==(other); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#13
  def eql?(other); end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#17
  def hash; end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#4
  def name; end

  # source://minitest-reporters//lib/minitest/reporters/base_reporter.rb#21
  def to_s; end
end

# source://minitest-reporters//lib/minitest/reporters/version.rb#3
Minitest::Reporters::VERSION = T.let(T.unsafe(nil), String)
